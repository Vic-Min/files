#vsga 1.1.11
Root id=1 vsg::Group
{
  userObjects 0
  children 2
  vsg::Node id=2 vsg::DepthSorted
  {
    userObjects 0
    binNumber 1
    bound 0.100000008941 0.100000008941 0.10000000149 0.70710680226
    child id=3 vsg::StateGroup
    {
      userObjects 0
      children 1
      vsg::Node id=4 vsg::VertexIndexDraw
      {
        userObjects 0
        firstBinding 0
        NumArrays 4
        Array id=5 vsg::vec3Array
        {
          userObjects 0
          properties 0 12 0 1 1 1 0 -1 0
          size 4
          storage id=0
          data -0.4 -0.4 0.1 0.6 -0.4 0.1 0.6 0.6 0.1 -0.4 0.6 0.1
        }
        Array id=6 vsg::vec3Array
        {
          userObjects 0
          properties 0 12 0 1 1 1 0 -1 0
          size 4
          storage id=0
          data 0 0 1 0 0 1 0 0 1 0 0 1
        }
        Array id=7 vsg::vec2Array
        {
          userObjects 0
          properties 0 8 0 1 1 1 0 -1 0
          size 4
          storage id=0
          data 0 0 1 0 1 1 0 1
        }
        Array id=8 vsg::vec4Array
        {
          userObjects 0
          properties 0 16 0 1 1 1 0 -1 0
          size 1
          storage id=0
          data 0 1 0 1
        }
        Indices id=9 vsg::ushortArray
        {
          userObjects 0
          properties 0 2 0 1 1 1 0 -1 0
          size 6
          storage id=0
          data 0 1 2 2 3 0
        }
        indexCount 6
        instanceCount 1
        firstIndex 0
        vertexOffset 0
        firstInstance 0
      }
      stateCommands 3
      vsg::StateCommand id=10 vsg::BindGraphicsPipeline
      {
        userObjects 0
        slot 0
        pipeline id=11 vsg::GraphicsPipeline
        {
          userObjects 0
          layout id=12 vsg::PipelineLayout
          {
            userObjects 0
            flags 0
            setLayouts 2
            descriptorLayout id=13 vsg::ViewDescriptorSetLayout
            {
              userObjects 0
            }
            descriptorLayout id=14 vsg::DescriptorSetLayout
            {
              userObjects 0
              bindings 1
              binding 10
              descriptorType 6
              descriptorCount 1
              stageFlags 16
            }
            pushConstantRanges 1
            stageFlags 2147483647
            offset 0
            size 128
          }
          stages 2
          vsg::ShaderStage id=15 vsg::ShaderStage
          {
            userObjects 0
            mask 18446744073709551615
            stage 1
            entryPointName "main"
            module id=16 vsg::ShaderModule
            {
              userObjects 0
              hints id=17 vsg::ShaderCompileSettings
              {
                vulkanVersion 4194304
                clientInputVersion 100
                language 0
                defaultVersion 450
                target 65536
                forwardCompatible 0
                generateDebugInfo 0
                optimize 0
                defines 1
                element "VSG_TWO_SIDED_LIGHTING"
              }
              source "#version 450
#extension GL_ARB_separate_shader_objects : enable

#pragma import_defines (VSG_INSTANCE_POSITIONS, VSG_BILLBOARD, VSG_DISPLACEMENT_MAP, VSG_SKINNING, VSG_POINT_SPRITE)

#define VIEW_DESCRIPTOR_SET 0
#define MATERIAL_DESCRIPTOR_SET 1

layout(push_constant) uniform PushConstants {
    mat4 projection;
    mat4 modelView;
} pc;

layout(location = 0) in vec3 vsg_Vertex;
layout(location = 1) in vec3 vsg_Normal;
layout(location = 2) in vec2 vsg_TexCoord0;
layout(location = 3) in vec4 vsg_Color;

#ifdef VSG_DISPLACEMENT_MAP
layout(set = MATERIAL_DESCRIPTOR_SET, binding = 7) uniform sampler2D displacementMap;
layout(set = MATERIAL_DESCRIPTOR_SET, binding = 8) uniform DisplacementMapScale
{
    vec3 value;
} displacementMapScale;
#endif

#ifdef VSG_BILLBOARD
layout(location = 4) in vec4 vsg_position_scaleDistance;
#elif defined(VSG_INSTANCE_POSITIONS)
layout(location = 4) in vec3 vsg_position;
#endif

#ifdef VSG_SKINNING
layout(location = 5) in ivec4 vsg_JointIndices;
layout(location = 6) in vec4 vsg_JointWeights;

layout(set = MATERIAL_DESCRIPTOR_SET, binding = 11) buffer JointMatrices
{
	mat4 matrices[];
} joint;
#endif

layout(location = 0) out vec3 eyePos;
layout(location = 1) out vec3 normalDir;
layout(location = 2) out vec4 vertexColor;
layout(location = 3) out vec2 texCoord0;

layout(location = 5) out vec3 viewDir;

out gl_PerVertex{
    vec4 gl_Position;
#ifdef VSG_POINT_SPRITE
    float gl_PointSize;
#endif
};

#ifdef VSG_BILLBOARD
mat4 computeBillboadMatrix(vec4 center_eye, float autoScaleDistance)
{
    float distance = -center_eye.z;

    float scale = (distance < autoScaleDistance) ? distance/autoScaleDistance : 1.0;
    mat4 S = mat4(scale, 0.0, 0.0, 0.0,
                  0.0, scale, 0.0, 0.0,
                  0.0, 0.0, scale, 0.0,
                  0.0, 0.0, 0.0, 1.0);

    mat4 T = mat4(1.0, 0.0, 0.0, 0.0,
                  0.0, 1.0, 0.0, 0.0,
                  0.0, 0.0, 1.0, 0.0,
                  center_eye.x, center_eye.y, center_eye.z, 1.0);
    return T*S;
}
#endif

void main()
{
    vec4 vertex = vec4(vsg_Vertex, 1.0);
    vec4 normal = vec4(vsg_Normal, 0.0);

#ifdef VSG_DISPLACEMENT_MAP
    vec3 scale = displacementMapScale.value;

    vertex.xyz = vertex.xyz + vsg_Normal * (texture(displacementMap, vsg_TexCoord0.st).s * scale.z);

    float s_delta = 0.01;
    float width = 0.0;

    float s_left = max(vsg_TexCoord0.s - s_delta, 0.0);
    float s_right = min(vsg_TexCoord0.s + s_delta, 1.0);
    float t_center = vsg_TexCoord0.t;
    float delta_left_right = (s_right - s_left) * scale.x;
    float dz_left_right = (texture(displacementMap, vec2(s_right, t_center)).s - texture(displacementMap, vec2(s_left, t_center)).s) * scale.z;

    // TODO need to handle different origins of displacementMap vs diffuseMap etc,
    float t_delta = s_delta;
    float t_bottom = max(vsg_TexCoord0.t - t_delta, 0.0);
    float t_top = min(vsg_TexCoord0.t + t_delta, 1.0);
    float s_center = vsg_TexCoord0.s;
    float delta_bottom_top = (t_top - t_bottom) * scale.y;
    float dz_bottom_top = (texture(displacementMap, vec2(s_center, t_top)).s - texture(displacementMap, vec2(s_center, t_bottom)).s) * scale.z;

    vec3 dx = normalize(vec3(delta_left_right, 0.0, dz_left_right));
    vec3 dy = normalize(vec3(0.0, delta_bottom_top, -dz_bottom_top));
    vec3 dz = normalize(cross(dx, dy));

    normal.xyz = normalize(dx * vsg_Normal.x + dy * vsg_Normal.y + dz * vsg_Normal.z);
#endif

#ifdef VSG_INSTANCE_POSITIONS
    vertex.xyz = vertex.xyz + vsg_position;
#endif

#ifdef VSG_BILLBOARD
    mat4 mv = computeBillboadMatrix(pc.modelView * vec4(vsg_position_scaleDistance.xyz, 1.0), vsg_position_scaleDistance.w);
#elif defined(VSG_SKINNING)
    // Calculate skinned matrix from weights and joint indices of the current vertex
    mat4 skinMat =
        vsg_JointWeights.x * joint.matrices[vsg_JointIndices.x] +
        vsg_JointWeights.y * joint.matrices[vsg_JointIndices.y] +
        vsg_JointWeights.z * joint.matrices[vsg_JointIndices.z] +
        vsg_JointWeights.w * joint.matrices[vsg_JointIndices.w];

    mat4 mv = pc.modelView * skinMat;
#else
    mat4 mv = pc.modelView;
#endif

    gl_Position = (pc.projection * mv) * vertex;
    eyePos = (mv * vertex).xyz;
    viewDir = - (mv * vertex).xyz;
    normalDir = (mv * normal).xyz;

    vertexColor = vsg_Color;
    texCoord0 = vsg_TexCoord0;

#ifdef VSG_POINT_SPRITE
    gl_PointSize = 1.0;
#endif
}
"
              code 0
              
            }
            NumSpecializationConstants 0
          }
          vsg::ShaderStage id=18 vsg::ShaderStage
          {
            userObjects 0
            mask 18446744073709551615
            stage 16
            entryPointName "main"
            module id=19 vsg::ShaderModule
            {
              userObjects 0
              hints id=17
              source "#version 450
#extension GL_ARB_separate_shader_objects : enable
#pragma import_defines (VSG_POINT_SPRITE, VSG_DIFFUSE_MAP, VSG_GREYSCALE_DIFFUSE_MAP, VSG_DETAIL_MAP, VSG_ALPHA_TEST)

#define VIEW_DESCRIPTOR_SET 0
#define MATERIAL_DESCRIPTOR_SET 1

#ifdef VSG_DIFFUSE_MAP
layout(set = MATERIAL_DESCRIPTOR_SET, binding = 0) uniform sampler2D diffuseMap;
#endif

#ifdef VSG_DETAIL_MAP
layout(set = MATERIAL_DESCRIPTOR_SET, binding = 1) uniform sampler2D detailMap;
#endif

layout(set = MATERIAL_DESCRIPTOR_SET, binding = 10) uniform MaterialData
{
    vec4 ambientColor;
    vec4 diffuseColor;
    vec4 specularColor;
    vec4 emissiveColor;
    float shininess;
    float alphaMask;
    float alphaMaskCutoff;
} material;

layout(location = 2) in vec4 vertexColor;
#ifndef VSG_POINT_SPRITE
layout(location = 3) in vec2 texCoord0;
#endif

layout(location = 0) out vec4 outColor;

void main()
{
#ifdef VSG_POINT_SPRITE
    vec2 texCoord0 = gl_PointCoord.xy;
#endif

    vec4 diffuseColor = vertexColor * material.diffuseColor;

#ifdef VSG_DIFFUSE_MAP
    #ifdef VSG_GREYSCALE_DIFFUSE_MAP
        float v = texture(diffuseMap, texCoord0.st).s;
        diffuseColor *= vec4(v, v, v, 1.0);
    #else
        diffuseColor *= texture(diffuseMap, texCoord0.st);
    #endif
#endif

#ifdef VSG_DETAIL_MAP
    vec4 detailColor = texture(detailMap, texCoord0.st);
    diffuseColor.rgb = mix(diffuseColor.rgb, detailColor.rgb, detailColor.a);
#endif


#ifdef VSG_ALPHA_TEST
    if (material.alphaMask == 1.0f && diffuseColor.a < material.alphaMaskCutoff) discard;
#endif

    outColor = diffuseColor;
}
"
              code 0
              
            }
            NumSpecializationConstants 0
          }
          pipelineStates 6
          vsg::GraphicsPipelineState id=20 vsg::VertexInputState
          {
            userObjects 0
            mask 18446744073709551615
            NumBindings 4
            binding 0
            stride 12
            inputRate 0
            binding 1
            stride 12
            inputRate 0
            binding 2
            stride 8
            inputRate 0
            binding 3
            stride 16
            inputRate 1
            NumAttributes 4
            location 0
            binding 0
            format 106
            offset 0
            location 1
            binding 1
            format 106
            offset 0
            location 2
            binding 2
            format 103
            offset 0
            location 3
            binding 3
            format 109
            offset 0
          }
          vsg::GraphicsPipelineState id=21 vsg::InputAssemblyState
          {
            userObjects 0
            mask 18446744073709551615
            topology 3
            primitiveRestartEnable 0
          }
          vsg::GraphicsPipelineState id=22 vsg::RasterizationState
          {
            userObjects 0
            mask 18446744073709551615
            depthClampEnable 0
            rasterizerDiscardEnable 0
            polygonMode 0
            cullMode 0
            frontFace 0
            depthBiasEnable 0
            depthBiasConstantFactor 1
            depthBiasClamp 0
            depthBiasSlopeFactor 1
            lineWidth 1
          }
          vsg::GraphicsPipelineState id=23 vsg::ColorBlendState
          {
            userObjects 0
            mask 18446744073709551615
            logicOp 3
            logicOpEnable 0
            attachments 1
            blendEnable 1
            srcColorBlendFactor 6
            dstColorBlendFactor 7
            colorBlendOp 0
            srcAlphaBlendFactor 6
            dstAlphaBlendFactor 0
            alphaBlendOp 0
            colorWriteMask 15
            blendConstants 0 0 0 0
          }
          vsg::GraphicsPipelineState id=24 vsg::MultisampleState
          {
            userObjects 0
            mask 18446744073709551615
            rasterizationSamples 1
            sampleShadingEnable 0
            minSampleShading 0
            sampleMasks 0
            alphaToCoverageEnable 0
            alphaToOneEnable 0
          }
          vsg::GraphicsPipelineState id=25 vsg::DepthStencilState
          {
            userObjects 0
            mask 18446744073709551615
            depthTestEnable 0
            depthWriteEnable 1
            depthCompareOp 4
            depthBoundsTestEnable 0
            stencilTestEnable 0
            front.failOp 0
            front.passOp 0
            front.depthFailOp 0
            front.compareOp 0
            front.compareMask 0
            front.writeMask 0
            front.reference 0
            back.failOp 0
            back.passOp 0
            back.depthFailOp 0
            back.compareOp 0
            back.compareMask 0
            back.writeMask 0
            back.reference 0
            minDepthBounds 0
            maxDepthBounds 1
          }
          subpass 0
        }
      }
      vsg::StateCommand id=26 vsg::BindDescriptorSet
      {
        userObjects 0
        slot 2
        pipelineBindPoint 0
        layout id=12
        firstSet 1
        descriptorSet id=27 vsg::DescriptorSet
        {
          userObjects 0
          setLayout id=14
          descriptors 1
          vsg::Descriptor id=28 vsg::DescriptorBuffer
          {
            userObjects 0
            dstBinding 10
            dstArrayElement 0
            dataList 1
            data id=29 vsg::PhongMaterialValue
            {
              userObjects 0
              properties 0 0 0 1 1 1 0 -1 0
              value              ambient 1 1 1 1
              diffuse 0.9 0.9 0.9 1
              specular 0.2 0.2 0.2 1
              emissive 0 0 0 0
              shininess 100
              alphaMask 1
              alphaMaskCutoff 0.5

            }
          }
        }
        dynamicOffsets 0
      }
      vsg::StateCommand id=30 vsg::BindViewDescriptorSets
      {
        userObjects 0
        slot 1
        pipelineBindPoint 0
        layout id=12
        firstSet 0
      }
      prototypeArrayState id=0
    }
  }
  vsg::Node id=31 vsg::DepthSorted
  {
    userObjects 0
    binNumber 2
    bound -0.100000023842 -0.100000023842 -0.10000000149 0.707106781187
    child id=32 vsg::StateGroup
    {
      userObjects 0
      children 1
      vsg::Node id=33 vsg::VertexIndexDraw
      {
        userObjects 0
        firstBinding 0
        NumArrays 4
        Array id=34 vsg::vec3Array
        {
          userObjects 0
          properties 0 12 0 1 1 1 0 -1 0
          size 4
          storage id=0
          data -0.6 -0.6 -0.1 0.4 -0.6 -0.1 0.4 0.4 -0.1 -0.6 0.4 -0.1
        }
        Array id=35 vsg::vec3Array
        {
          userObjects 0
          properties 0 12 0 1 1 1 0 -1 0
          size 4
          storage id=0
          data 0 0 1 0 0 1 0 0 1 0 0 1
        }
        Array id=36 vsg::vec2Array
        {
          userObjects 0
          properties 0 8 0 1 1 1 0 -1 0
          size 4
          storage id=0
          data 0 0 1 0 1 1 0 1
        }
        Array id=37 vsg::vec4Array
        {
          userObjects 0
          properties 0 16 0 1 1 1 0 -1 0
          size 1
          storage id=0
          data 0 0 1 1
        }
        Indices id=38 vsg::ushortArray
        {
          userObjects 0
          properties 0 2 0 1 1 1 0 -1 0
          size 6
          storage id=0
          data 0 1 2 2 3 0
        }
        indexCount 6
        instanceCount 1
        firstIndex 0
        vertexOffset 0
        firstInstance 0
      }
      stateCommands 3
      vsg::StateCommand id=39 vsg::BindGraphicsPipeline
      {
        userObjects 0
        slot 0
        pipeline id=40 vsg::GraphicsPipeline
        {
          userObjects 0
          layout id=41 vsg::PipelineLayout
          {
            userObjects 0
            flags 0
            setLayouts 2
            descriptorLayout id=13
            descriptorLayout id=14
            pushConstantRanges 1
            stageFlags 2147483647
            offset 0
            size 128
          }
          stages 2
          vsg::ShaderStage id=15
          vsg::ShaderStage id=18
          pipelineStates 6
          vsg::GraphicsPipelineState id=42 vsg::VertexInputState
          {
            userObjects 0
            mask 18446744073709551615
            NumBindings 4
            binding 0
            stride 12
            inputRate 0
            binding 1
            stride 12
            inputRate 0
            binding 2
            stride 8
            inputRate 0
            binding 3
            stride 16
            inputRate 1
            NumAttributes 4
            location 0
            binding 0
            format 106
            offset 0
            location 1
            binding 1
            format 106
            offset 0
            location 2
            binding 2
            format 103
            offset 0
            location 3
            binding 3
            format 109
            offset 0
          }
          vsg::GraphicsPipelineState id=43 vsg::InputAssemblyState
          {
            userObjects 0
            mask 18446744073709551615
            topology 3
            primitiveRestartEnable 0
          }
          vsg::GraphicsPipelineState id=44 vsg::RasterizationState
          {
            userObjects 0
            mask 18446744073709551615
            depthClampEnable 0
            rasterizerDiscardEnable 0
            polygonMode 0
            cullMode 0
            frontFace 0
            depthBiasEnable 0
            depthBiasConstantFactor 1
            depthBiasClamp 0
            depthBiasSlopeFactor 1
            lineWidth 1
          }
          vsg::GraphicsPipelineState id=45 vsg::ColorBlendState
          {
            userObjects 0
            mask 18446744073709551615
            logicOp 3
            logicOpEnable 0
            attachments 1
            blendEnable 1
            srcColorBlendFactor 6
            dstColorBlendFactor 7
            colorBlendOp 0
            srcAlphaBlendFactor 6
            dstAlphaBlendFactor 0
            alphaBlendOp 0
            colorWriteMask 15
            blendConstants 0 0 0 0
          }
          vsg::GraphicsPipelineState id=46 vsg::MultisampleState
          {
            userObjects 0
            mask 18446744073709551615
            rasterizationSamples 1
            sampleShadingEnable 0
            minSampleShading 0
            sampleMasks 0
            alphaToCoverageEnable 0
            alphaToOneEnable 0
          }
          vsg::GraphicsPipelineState id=47 vsg::DepthStencilState
          {
            userObjects 0
            mask 18446744073709551615
            depthTestEnable 0
            depthWriteEnable 1
            depthCompareOp 4
            depthBoundsTestEnable 0
            stencilTestEnable 0
            front.failOp 0
            front.passOp 0
            front.depthFailOp 0
            front.compareOp 0
            front.compareMask 0
            front.writeMask 0
            front.reference 0
            back.failOp 0
            back.passOp 0
            back.depthFailOp 0
            back.compareOp 0
            back.compareMask 0
            back.writeMask 0
            back.reference 0
            minDepthBounds 0
            maxDepthBounds 1
          }
          subpass 0
        }
      }
      vsg::StateCommand id=26
      vsg::StateCommand id=30
      prototypeArrayState id=0
    }
  }
}
